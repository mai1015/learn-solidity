{
  "address": "0x65D46Fa5954B1B39F891AcCF467C5069FaC120B8",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceAddr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x0ab7cf2b009f178e90e898f5de1307e6e69d7e5b06d07cd8a1284a8aff99c53e",
  "receipt": {
    "to": null,
    "from": "0x2A80fDc27Cd6E7754C030CC0D2208cF04678451e",
    "contractAddress": "0x65D46Fa5954B1B39F891AcCF467C5069FaC120B8",
    "transactionIndex": 158,
    "gasUsed": "833679",
    "logsBloom": "0x
    "blockHash": "0x93148fd7b67409c8253e56dc2b1566e52a8c26c7e6e7383582c5fabb8f0d05c4",
    "transactionHash": "0x0ab7cf2b009f178e90e898f5de1307e6e69d7e5b06d07cd8a1284a8aff99c53e",
    "logs": [],
    "blockNumber": 7623708,
    "cumulativeGasUsed": "25514119",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 2,
  "solcInputHash": "d43c40c5c40a1ee3dd29cb4b744b46d1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n\\n    address public immutable priceAddr;\\n\\n    constructor(address _priceAddr) {\\n        i_owner = msg.sender;\\n        priceAddr = _priceAddr;\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceAddr) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(priceAddr);\\n        return priceFeed.version();\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\\\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback()\\n    //     /   \\\\\\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0xc341fefdb6bf36f15847fea9af9ee0d76ab12fb8824f7b2e89485750b925f447\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(address priceAddr) internal view returns (uint256) {\\n        // Goerli ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(priceAddr);\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount, address priceAddr)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceAddr);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x82ee7e5b0ac066bbc4d1159e95d17b70b1db4c92eddd9799c641771758d95cfe\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b50604051610f86380380610f8683398181016040528101906100329190610103565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505050610130565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100d0826100a5565b9050919050565b6100e0816100c5565b81146100eb57600080fd5b50565b6000815190506100fd816100d7565b92915050565b600060208284031215610119576101186100a0565b5b6000610127848285016100ee565b91505092915050565b60805160a051610e1c61016a600039600081816101ee0152818161031c01526106190152600081816103b4015261063d0152610e1c6000f3fe60806040526004361061007f5760003560e01c80636c04488a1161004e5780636c04488a14610142578063b60d42881461016d578063dba6335f14610177578063dc0d3dff146101a25761008e565b80630d8e6e2c146100985780633ccfd60b146100c35780633e47d6f3146100da5780636b69a592146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610317565b6040516100ba9190610831565b60405180910390f35b3480156100cf57600080fd5b506100d86103b2565b005b3480156100e657600080fd5b5061010160048036038101906100fc91906108af565b6105f2565b60405161010e9190610831565b60405180910390f35b34801561012357600080fd5b5061012c61060a565b6040516101399190610831565b60405180910390f35b34801561014e57600080fd5b50610157610617565b60405161016491906108eb565b60405180910390f35b6101756101df565b005b34801561018357600080fd5b5061018c61063b565b60405161019991906108eb565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c49190610932565b61065f565b6040516101d691906108eb565b60405180910390f35b6802b5e3af16b188000061021c7f00000000000000000000000000000000000000000000000000000000000000003461069e90919063ffffffff16565b101561025d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610254906109bc565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ab9190610a0b565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000807f000000000000000000000000000000000000000000000000000000000000000090508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa158015610388573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ac9190610a54565b91505090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610437576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104e25760006001828154811061045d5761045c610a81565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104da90610ab0565b91505061043a565b50600067ffffffffffffffff8111156104fe576104fd610af8565b5b60405190808252806020026020018201604052801561052c5781602001602082028036833780820191505090505b5060019080519060200190610542929190610771565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161056990610b58565b60006040518083038185875af1925050503d80600081146105a6576040519150601f19603f3d011682016040523d82523d6000602084013e6105ab565b606091505b50509050806105ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e690610bb9565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061066f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106aa836106da565b90506000670de0b6b3a764000085836106c39190610bd9565b6106cd9190610c4a565b9050809250505092915050565b60008082905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561072d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107519190610cf3565b5050509150506402540be400816107689190610d6e565b92505050919050565b8280548282559060005260206000209081019282156107ea579160200282015b828111156107e95782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610791565b5b5090506107f791906107fb565b5090565b5b808211156108145760008160009055506001016107fc565b5090565b6000819050919050565b61082b81610818565b82525050565b60006020820190506108466000830184610822565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061087c82610851565b9050919050565b61088c81610871565b811461089757600080fd5b50565b6000813590506108a981610883565b92915050565b6000602082840312156108c5576108c461084c565b5b60006108d38482850161089a565b91505092915050565b6108e581610871565b82525050565b600060208201905061090060008301846108dc565b92915050565b61090f81610818565b811461091a57600080fd5b50565b60008135905061092c81610906565b92915050565b6000602082840312156109485761094761084c565b5b60006109568482850161091d565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b60006109a6601b8361095f565b91506109b182610970565b602082019050919050565b600060208201905081810360008301526109d581610999565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a1682610818565b9150610a2183610818565b9250828201905080821115610a3957610a386109dc565b5b92915050565b600081519050610a4e81610906565b92915050565b600060208284031215610a6a57610a6961084c565b5b6000610a7884828501610a3f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610abb82610818565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610aed57610aec6109dc565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b42600083610b27565b9150610b4d82610b32565b600082019050919050565b6000610b6382610b35565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ba3600b8361095f565b9150610bae82610b6d565b602082019050919050565b60006020820190508181036000830152610bd281610b96565b9050919050565b6000610be482610818565b9150610bef83610818565b9250828202610bfd81610818565b91508282048414831517610c1457610c136109dc565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c5582610818565b9150610c6083610818565b925082610c7057610c6f610c1b565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c9a81610c7b565b8114610ca557600080fd5b50565b600081519050610cb781610c91565b92915050565b6000819050919050565b610cd081610cbd565b8114610cdb57600080fd5b50565b600081519050610ced81610cc7565b92915050565b600080600080600060a08688031215610d0f57610d0e61084c565b5b6000610d1d88828901610ca8565b9550506020610d2e88828901610cde565b9450506040610d3f88828901610a3f565b9350506060610d5088828901610a3f565b9250506080610d6188828901610ca8565b9150509295509295909350565b6000610d7982610cbd565b9150610d8483610cbd565b9250828202610d9281610cbd565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610dca57610dc96109dc565b5b8282058414831517610ddf57610dde6109dc565b5b509291505056fea2646970667358221220ade1072ab08d619c32ab71b97187fda41f8db2fdfdfa77f4b7c5e2bb4a3ca84f64736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80636c04488a1161004e5780636c04488a14610142578063b60d42881461016d578063dba6335f14610177578063dc0d3dff146101a25761008e565b80630d8e6e2c146100985780633ccfd60b146100c35780633e47d6f3146100da5780636b69a592146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610317565b6040516100ba9190610831565b60405180910390f35b3480156100cf57600080fd5b506100d86103b2565b005b3480156100e657600080fd5b5061010160048036038101906100fc91906108af565b6105f2565b60405161010e9190610831565b60405180910390f35b34801561012357600080fd5b5061012c61060a565b6040516101399190610831565b60405180910390f35b34801561014e57600080fd5b50610157610617565b60405161016491906108eb565b60405180910390f35b6101756101df565b005b34801561018357600080fd5b5061018c61063b565b60405161019991906108eb565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c49190610932565b61065f565b6040516101d691906108eb565b60405180910390f35b6802b5e3af16b188000061021c7f00000000000000000000000000000000000000000000000000000000000000003461069e90919063ffffffff16565b101561025d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610254906109bc565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ab9190610a0b565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000807f000000000000000000000000000000000000000000000000000000000000000090508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa158015610388573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ac9190610a54565b91505090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610437576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104e25760006001828154811061045d5761045c610a81565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104da90610ab0565b91505061043a565b50600067ffffffffffffffff8111156104fe576104fd610af8565b5b60405190808252806020026020018201604052801561052c5781602001602082028036833780820191505090505b5060019080519060200190610542929190610771565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161056990610b58565b60006040518083038185875af1925050503d80600081146105a6576040519150601f19603f3d011682016040523d82523d6000602084013e6105ab565b606091505b50509050806105ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e690610bb9565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061066f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106aa836106da565b90506000670de0b6b3a764000085836106c39190610bd9565b6106cd9190610c4a565b9050809250505092915050565b60008082905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561072d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107519190610cf3565b5050509150506402540be400816107689190610d6e565b92505050919050565b8280548282559060005260206000209081019282156107ea579160200282015b828111156107e95782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610791565b5b5090506107f791906107fb565b5090565b5b808211156108145760008160009055506001016107fc565b5090565b6000819050919050565b61082b81610818565b82525050565b60006020820190506108466000830184610822565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061087c82610851565b9050919050565b61088c81610871565b811461089757600080fd5b50565b6000813590506108a981610883565b92915050565b6000602082840312156108c5576108c461084c565b5b60006108d38482850161089a565b91505092915050565b6108e581610871565b82525050565b600060208201905061090060008301846108dc565b92915050565b61090f81610818565b811461091a57600080fd5b50565b60008135905061092c81610906565b92915050565b6000602082840312156109485761094761084c565b5b60006109568482850161091d565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b60006109a6601b8361095f565b91506109b182610970565b602082019050919050565b600060208201905081810360008301526109d581610999565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a1682610818565b9150610a2183610818565b9250828201905080821115610a3957610a386109dc565b5b92915050565b600081519050610a4e81610906565b92915050565b600060208284031215610a6a57610a6961084c565b5b6000610a7884828501610a3f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610abb82610818565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610aed57610aec6109dc565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b42600083610b27565b9150610b4d82610b32565b600082019050919050565b6000610b6382610b35565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ba3600b8361095f565b9150610bae82610b6d565b602082019050919050565b60006020820190508181036000830152610bd281610b96565b9050919050565b6000610be482610818565b9150610bef83610818565b9250828202610bfd81610818565b91508282048414831517610c1457610c136109dc565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c5582610818565b9150610c6083610818565b925082610c7057610c6f610c1b565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c9a81610c7b565b8114610ca557600080fd5b50565b600081519050610cb781610c91565b92915050565b6000819050919050565b610cd081610cbd565b8114610cdb57600080fd5b50565b600081519050610ced81610cc7565b92915050565b600080600080600060a08688031215610d0f57610d0e61084c565b5b6000610d1d88828901610ca8565b9550506020610d2e88828901610cde565b9450506040610d3f88828901610a3f565b9350506060610d5088828901610a3f565b9250506080610d6188828901610ca8565b9150509295509295909350565b6000610d7982610cbd565b9150610d8483610cbd565b9250828202610d9281610cbd565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610dca57610dc96109dc565b5b8282058414831517610ddf57610dde6109dc565b5b509291505056fea2646970667358221220ade1072ab08d619c32ab71b97187fda41f8db2fdfdfa77f4b7c5e2bb4a3ca84f64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}